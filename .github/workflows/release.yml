name: Rust Multi-Platform Build

on:
  push:
    tags:
      - "v*"       # 打 tag 时触发，例如 v1.0.0
  workflow_dispatch:  # 也可以手动触发

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip
          - os: macos-latest
            target: x86_64-apple-darwin
            archive: tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            archive: tar.gz

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package
        run: |
          mkdir -p dist
          BINARY_NAME=$(basename $(ls target/${{ matrix.target }}/release/* | head -n 1))
          cp target/${{ matrix.target }}/release/$BINARY_NAME dist/
          cp README.md LICENSE* dist/ || true

          if [ "${{ matrix.archive }}" = "zip" ]; then
            7z a $BINARY_NAME-${{ matrix.target }}.zip ./dist/*
            mv $BINARY_NAME-${{ matrix.target }}.zip ./dist/
          else
            tar -czvf $BINARY_NAME-${{ matrix.target }}.tar.gz -C dist .
            mv $BINARY_NAME-${{ matrix.target }}.tar.gz ./dist/
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: dist/*

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
