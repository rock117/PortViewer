name: Tauri App Multi-Platform Release

on:
  push:
    tags:
      - "v*"       # 打 tag 时触发，例如 v1.0.0
  workflow_dispatch:  # 手动触发

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            archive: tar.gz
          - os: windows-latest
            archive: zip
          - os: macos-latest
            archive: tar.gz

    runs-on: ${{ matrix.platform.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'  # 添加 npm 缓存

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      # 添加 Rust 缓存
      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # Linux 上安装 Tauri 依赖
      - name: Install Linux deps
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libwebkit2gtk-4.0-dev build-essential curl

      - name: Install frontend dependencies
        run: npm install  # 使用 ci 而不是 install，更快更可靠

      # 锁定 Tauri CLI 版本
      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli@^2.8.4

      - name: Build Tauri app
        run: tauri build

      - name: Package artifacts
        run: |
          mkdir -p dist
          cp -r src-tauri/target/release/bundle/* dist/
          cp README.md LICENSE* dist/ || true

          if [ "${{ matrix.platform.archive }}" = "zip" ]; then
            7z a app-${{ matrix.platform.os }}.zip ./dist/*
            mv app-${{ matrix.platform.os }}.zip ./dist/
          else
            tar -czvf app-${{ matrix.platform.os }}.tar.gz -C dist .
            mv app-${{ matrix.platform.os }}.tar.gz ./dist/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.os }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
